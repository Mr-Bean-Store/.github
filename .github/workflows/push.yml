name: Run Live
on:
  push:
    branches:
      - feature/pulumi_*
      - main
      - develop
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
permissions:
  id-token: write
  contents: read
jobs:
  Run-Live:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
        env:
          AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: pulumi-github-oidc
      
      - name: Setup Pulumi Packages
        run: pip install -r requirements.txt
        working-directory: infrastructure        
      
      - name: Run Pulumi Up
        uses: pulumi/actions@v5.1.1
        with:
          command: up
          stack-name: ${{ secrets.PULUMI_STACK }}
          work-dir: infrastructure
          config-map: |
            "{
              db_user: {value: ${{ secrets.DB_USER }}, secret: true}, 
              db_password: {value: ${{ secrets.DB_PASSWORD }}, secret: true} 
              ssh_key_name: {value: ${{ secrets.SSH_KEY_NAME}}, secret: true}
            }"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Update S3 Env File
        run:
          echo AWS_
          echo DB_USER=${{ secrets.DB_USER }} >> .secrets
          echo DB_
      
      - name: Create Flyway Config
        working-directory: infrastructure
        run: |
          echo [flyway] >> flyway.toml
          echo environment="live" >> flyway.toml
          echo >> flyway.toml
          echo [environments.live] >> flyway.toml
          echo url="$(aws rds describe-db-instances --query "DBInstances[?DBName==`${{ secrets.DB_INSTANCE_NAME }}`].Endpoint.Address" --output text)" >> flyway.toml
          echo user="${{ secrets.DB_USER }}"
          echo password="${{ secrets.DB_PASSWORD }}"
      
      - name: Download Flyway
        working-directory: infrastructure
        run: |
          "wget -qO- https://download.red-gate.com/maven/release/com/redgate/flyway/flyway-commandline/10.9.1/flyway-commandline-10.9.1-linux-x64.tar.gz 
          | tar -xvz && sudo ln -s `pwd`/flyway-10.9.1/flyway `pwd`"
      
      - name: Run Flyway Migrations
        working-directory: infrastructure
        run: flyway -configFiles="./flyway.toml" migrate