name: Build and Deploy Spring Boot App

on:
  push:
    branches:
      - devwasabi/feature/restAPI  # Adjust this if you're using a different default branch

permissions:
  id-token: write
  contents: read
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'corretto'
        cache: maven

    - name: Build Spring Boot JAR
      run: |
        mvn clean package -DskipTests=true

    - name: Install SSH
      run: sudo apt-get install openssh-client -y

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE }}
        role-session-name: pulumi-github-oidc

    - name: Transfer JAR file to EC2 instance
      run: |
        echo
        ssh \
        -i <(${{ secrets.WANDILE_SSH_PRIVATE_KEY }}) \
        -o StrictHostKeyChecking=no \
        ec2-user@${{ secrets.WANDILE_EC2_HOST }} 'mkdir -p /home/ec2-user/devBean && \
        scp -o StrictHostKeyChecking=no -i <(${{ secrets.WANDILE_SSH_PRIVATE_KEY }}) devBean-0.0.1.jar ec2-user@${{ secrets.WANDILE_EC2_HOST }}:/home/ec2-user/devBean'

    - name: SSH into EC2 instance and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.WANDILE_EC2_HOST }}
        username: ec2-user
        key: <(${{ secrets.WANDILE_SSH_PRIVATE_KEY }})
        script: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY_NAME }} ec2-user@${{ secrets.EC2_HOSTNAME }} 'sudo systemctl stop your-app.service'
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY_NAME }} ec2-user@${{ secrets.EC2_HOSTNAME }} 'sudo cp /home/ec2-user/devBean/*.jar /opt/myapp'
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY_NAME }} ec2-user@${{ secrets.EC2_HOSTNAME }} 'sudo systemctl start your-app.service'
