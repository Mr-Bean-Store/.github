name: Build and Deploy Spring Boot App

on:
  push:
    branches:
      - devwasabi/feature/restAPI  # Adjust this if you're using a different default branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
        java -version

    - name: Install Maven
      run: sudo apt-get install maven -y

    - name: Build Spring Boot JAR
      run: |
        mvn package -DskipTests=true

    - name: Install SSH
      run: sudo apt-get install openssh-client -y

    - name: Transfer JAR file to EC2 instance
      run: |
        ssh \
        -i ${{ secrets.SSH_KEY_NAME }} \
        -o StrictHostKeyChecking=no \
        ec2-user@${{ secrets.EC2_HOSTNAME }} 'mkdir -p /home/ec2-user/devBean && \
        scp -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY_NAME }} target/devBean-0.0.1.jar ec2-user@${{ secrets.EC2_HOSTNAME }}:/home/ec2-user/devBean'


    - name: SSH into EC2 instance and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOSTNAME }}
        username: ec2-user
        key: ${{ secrets.SSH_KEY_NAME }}
        script: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY_NAME }} ec2-user@${{ secrets.EC2_HOSTNAME }} 'sudo systemctl stop your-app.service'
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY_NAME }} ec2-user@${{ secrets.EC2_HOSTNAME }} 'sudo cp /home/ec2-user/devBean/*.jar /opt/myapp'
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY_NAME }} ec2-user@${{ secrets.EC2_HOSTNAME }} 'sudo systemctl start your-app.service'

