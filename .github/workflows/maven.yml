# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "devwasabi/feature/restAPI" ]

permissions:
  id-token: write
  contents: write
  actions: write

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout Branch
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE }}
        role-session-name: pulumi-github-oidc

    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'corretto'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file ./server/pom.xml

    - name: Getting RDS Endpoint
      run: |
        DB_URL="$(aws rds describe-db-instances --query "DBInstances[?DBName=='${{ secrets.DB_INSTANCE_NAME }}'].Endpoint.Address" --output text)"
        echo "::add-mask::$DB_URL" 
        echo "DB_URL=$DB_URL" >> $GITHUB_ENV

    - name: Connect to Database and Execute Jar File
      run: |
        sudo kill -9 `sudo lsof -t -i:8090` & sudo java -jar /home/ubuntu/actions-runner/_work/MrBeanStore/MrBeanStore/target/devBean-0.0.1.jar \
        --spring.datasource.url=jdbc:postgresql://${{ env.DB_URL }}/${{ secrets.DB_INSTANCE_NAME }} \
        --spring.datasource.username=${{ secrets.DB_USER }} \
        --spring.datasource.password=${{ secrets.DB_PASSWORD }} &


    
